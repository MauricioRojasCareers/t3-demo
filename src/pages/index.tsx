import { type NextPage } from "next";
import Head from "next/head";

import { api } from "@/utils/api";
import { LoadingPage, LoadingSpinner } from "@/components/loading";
import { useForm, type SubmitHandler } from "react-hook-form";
import { HiDotsHorizontal } from "react-icons/hi";

type FormValues = {
  postBody: string;
};

const CreatePostWizard = () => {
  // Grab context
  const ctx = api.useContext();

  // TRPC MUTATION
  const { mutate, isLoading: isPosting } = api.posts.makePost.useMutation({
    onSuccess: () => {
      void ctx.posts.getAll.invalidate();
    },
  });

  //React Hook Form Handler
  const { register, handleSubmit, reset } = useForm<FormValues>();
  const onSubmit: SubmitHandler<FormValues> = (data) => {
    mutate(data);
    reset();
  };

  return (
    <div className="flex w-full ">
      <form
        onSubmit={handleSubmit(onSubmit)}
        className="relative flex grow flex-col"
      >
        <div className="m-5 border-b">
          <input
            placeholder="What's happening?"
            className="h-20 w-full bg-transparent outline-none"
            {...register("postBody", { required: true })}
            disabled={isPosting}
          ></input>
        </div>

        <div className="h-5 "></div>

        {!isPosting && (
          <button
            type="submit"
            disabled={isPosting}
            className="absolute bottom-0 right-0"
          >
            Chirp
          </button>
        )}

        {isPosting && (
          <div className="absolute bottom-0 right-0">
            <LoadingSpinner size={30}></LoadingSpinner>
          </div>
        )}
      </form>
    </div>
  );
};

const MoreInfo = () => {
  return <div></div>;
};

const Home: NextPage = () => {
  const { data, isLoading } = api.posts.getAll.useQuery();

  if (isLoading) return <LoadingPage />;

  if (!data) return <div>Something Went Wrong</div>;

  return (
    <>
      <Head>
        <title>Chirp üê¶</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen justify-center">
        <div className="h-full w-full border-x border-slate-400 md:max-w-2xl">
          <div className="border-b border-slate-400  p-8">
            <CreatePostWizard />
          </div>

          <div className="flex flex-col">
            {data.map((post) => (
              <div
                key={post.id}
                className="relative flex flex-row border-b border-slate-400  p-8"
              >
                {post.content}
                <MoreInfo></MoreInfo>
              </div>
            ))}
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;
